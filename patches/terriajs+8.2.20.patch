diff --git a/node_modules/terriajs/dist/ReactViews/ExplorerWindow/Tabs/DataCatalogTab.js b/node_modules/terriajs/dist/ReactViews/ExplorerWindow/Tabs/DataCatalogTab.js
index c5cf44a..fbcb1d1 100644
--- a/node_modules/terriajs/dist/ReactViews/ExplorerWindow/Tabs/DataCatalogTab.js
+++ b/node_modules/terriajs/dist/ReactViews/ExplorerWindow/Tabs/DataCatalogTab.js
@@ -20,6 +20,7 @@ import Box from "../../../Styled/Box";
 let DataCatalogTab = class DataCatalogTab extends React.Component {
     get searchPlaceholder() {
         const { t } = this.props;
+        console.log("t", t)
         return this.props.searchPlaceholder || t("addData.searchPlaceholder");
     }
     changeSearchText(newText) {
diff --git a/node_modules/terriajs/lib/.DS_Store b/node_modules/terriajs/lib/.DS_Store
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/terriajs/lib/Map/PickedFeatures/PickedFeatures.ts b/node_modules/terriajs/lib/Map/PickedFeatures/PickedFeatures.ts
index ae4ce1e..1c78385 100644
--- a/node_modules/terriajs/lib/Map/PickedFeatures/PickedFeatures.ts
+++ b/node_modules/terriajs/lib/Map/PickedFeatures/PickedFeatures.ts
@@ -67,7 +67,6 @@ export function featureBelongsToCatalogItem(
 
   const dataSource = feature.entityCollection?.owner;
   const imageryProvider = feature.imageryLayer?.imageryProvider;
-
   // Test whether the catalog item has a matching dataSource or an imageryProvider
   const match = catalogItem.mapItems.some((mapItem) => {
     if (dataSource && mapItem === dataSource) {
diff --git a/node_modules/terriajs/lib/Models/Leaflet.ts b/node_modules/terriajs/lib/Models/Leaflet.ts
index d8f0f0b..a303184 100644
--- a/node_modules/terriajs/lib/Models/Leaflet.ts
+++ b/node_modules/terriajs/lib/Models/Leaflet.ts
@@ -204,6 +204,7 @@ export default class Leaflet extends GlobeOrMap {
       ]);
       const pickLocation = this.pickLocation.bind(this);
       const pickFeature = (entity: Entity, event: L.LeafletMouseEvent) => {
+        console.log("pickfeature")
         this._featurePicked(entity, event);
       };
 
@@ -217,14 +218,17 @@ export default class Leaflet extends GlobeOrMap {
       });
 
       if (this.terriaViewer.disableInteraction) {
+        console.log("click 1")
         interactions.forEach((handler) => handler.disable());
         this.map.off("click", pickLocation);
         this.scene.featureClicked.removeEventListener(pickFeature);
         this._disposeSelectedFeatureSubscription &&
           this._disposeSelectedFeatureSubscription();
       } else {
+        console.log("click 2")
         interactions.forEach((handler) => handler.enable());
         this.map.on("click", pickLocation);
+        console.log(this.scene)
         this.scene.featureClicked.addEventListener(pickFeature);
         this._disposeSelectedFeatureSubscription = autorun(() => {
           const feature = this.terria.selectedFeature;
@@ -289,7 +293,7 @@ export default class Leaflet extends GlobeOrMap {
    */
   private pickLocation(e: L.LeafletEvent) {
     const mouseEvent = <L.LeafletMouseEvent>e;
-
+console.log(mouseEvent.latlng + "dddd")
     // Handle click events that cross the anti-meridian
     if (mouseEvent.latlng.lng > 180 || mouseEvent.latlng.lng < -180) {
       mouseEvent.latlng = mouseEvent.latlng.wrap();
diff --git a/node_modules/terriajs/lib/Models/LocationMarkerUtils.ts b/node_modules/terriajs/lib/Models/LocationMarkerUtils.ts
index 1286781..b37e3f8 100644
--- a/node_modules/terriajs/lib/Models/LocationMarkerUtils.ts
+++ b/node_modules/terriajs/lib/Models/LocationMarkerUtils.ts
@@ -102,6 +102,7 @@ export function getMarkerLocation(terria: Terria): LatLonHeight | undefined {
   }
   const marker: any = catalogItem.czmlData[1];
   const position = marker?.position?.cartographicDegrees;
+  console.log(position)
   if (Array.isArray(toJS(position))) {
     const [longitude, latitude, height] = position;
     if (longitude !== undefined && latitude !== undefined) {
diff --git a/node_modules/terriajs/lib/ReactViews/Workbench/Controls/ChartItemSelector.tsx b/node_modules/terriajs/lib/ReactViews/Workbench/Controls/ChartItemSelector.tsx
index 025fd72..8cd3835 100644
--- a/node_modules/terriajs/lib/ReactViews/Workbench/Controls/ChartItemSelector.tsx
+++ b/node_modules/terriajs/lib/ReactViews/Workbench/Controls/ChartItemSelector.tsx
@@ -30,6 +30,7 @@ export const ChartItem: React.FC<IChartItem> = observer(
 
     const toggleActive = () => {
       const catalogItem = chartItem.item;
+      console.log(chartItem.item)
       runInAction(() => {
         const shouldSelect = !chartItem.isSelectedInWorkbench;
         chartItem.updateIsSelectedInWorkbench(shouldSelect);
